extends layout

block content

  script(src='/socket.io/socket.io.js')
  script.
    var canvas = document.createElement('canvas');
    var ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    document.body.appendChild(canvas);
    var mails = [];
    var socket = io.connect();
    var gameLoop = null;

    /*
    taken from http://www.gizma.com/easing/
    @t - current Time
    @b - start value
    @c - change in value
    @d - duration

    */
    easeIn = function (t, b, c, d) {
      return c*t/d + b;
    }

    render = function () {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.drawImage(monster.image, monster.x, monster.y, monster.w, monster.h);
      ctx.font = 'italic 40pt calibri';
      ctx.fillText(Math.ceil(monster.life).toString(), 40, 40);
      for(var i = 0; i < mails.length; i++) {
        var mail = mails[i];
        ctx.drawImage(mail.image, mail.x, mail.y, mail.w, mail.h);
      }
    }

    update = function () {
      var i = mails.length;
      var exit = false;
      while (i--) {
        var currentTime = new Date().getTime()/1000-mails[i].created;
        mails[i].x = easeIn(currentTime, 0, monster.x + monster.w/2, 1.2);
        mails[i].y = easeIn(currentTime, window.innerHeight-(window.innerHeight*0.30), monster.y-monster.h, 1.2);
        if (mails[i].x >= monster.x + monster.w/2 && mails[i].y >= monster.y - monster.h) {
          var parse = mails.splice(i)[0];
          monster.life -= parse.damage;
          if (monster.life < 0) {
            parse.killed = 'You killed the monster!';
            clearInterval(gameLoop);
            ctx.clearRect(monster.x, monster.y, monster.w, monster.h);
            exit = true;
          }
          socket.emit('damage', {email: parse.email, damage: parse.damage, killed: parse.killed || 'Almost there brah!'});
          if (exit) {
            break;
          }
        }
      }
      if (!exit) {
        render();
      }
    }

    var monster = {
      x: window.innerWidth-(window.innerWidth*0.60),
      y: 0,
      w: window.innerWidth*0.40,
      h: window.innerHeight*.50,
      image: new Image(),
      life: parseInt(window.location.pathname.split('/')[2], 10)
    };
    monster.image.src = '/images/charizard.gif'
    //When Monster is loaded, I can attack him
    monster.image.onload = function () {
      gameLoop = setInterval(update, 10);
      socket.emit('join game', window.location.pathname.split('/')[2]);
      socket.on('attack', function (email) {
        mail = {
          x: 0,
          y: window.innerHeight-(window.innerHeight*0.30),
          w: window.innerWidth*0.04,
          h: window.innerHeight*0.05,
          image: new Image(),
          email: email,
          damage: Math.random() * (5 - 2) + 2,
          created: new Date().getTime()/1000
        }
        mail.image.src = '/images/mail.png'
        mail.image.onload = function () {
          mails.push(mail);
          render(); //remove later
        };
      });
    }

